program = _{ SOI ~ NEWLINE* ~ (stmt ~ NEWLINE+) * ~ stmt? ~ EOI }
stmt = {
	assgn_stmt
    | pattern_slot 
    | track
    | mixer
}
assgn_stmt = { pattern_assgmt }


pattern_assgmt = { pattern_slot ~ (pattern | pattern_list) }
pattern_slot = @{ track ~ "." ~ unsigned_int }
track = @{ mixer ~ unsigned_int }
mixer = { "$" }


pattern_list = { pattern ~ ("," ~ NEWLINE* ~ pattern)+ }
pattern = { "|" ~ (chord | symbol_group | parenthesised_event)* ~  "|" }
parenthesised_event = { "(" ~ (symbol_group | chord | parenthesised_event)+  ~ ")" ~ event_method* }
chord = { "[" ~ (symbol_group | parenthesised_event)+ ~ "]" }
symbol_group = @{ pattern_symbol+ }
pattern_symbol = { 
    event_method 
    | octave 
    | alteration
    | pitch
    | pause
    | pattern_input
    | modulation }
pitch = { ASCII_DIGIT | 'a'..'f' }
pause = { "r" }
pattern_input = { "%" }
octave = { "o" | "O" }
alteration = { "+" | "-" }
event_method = { "_" | "." | "*" | ":" }
modulation = { "p" | "F" | "<" | ">" | literal_modulation }
literal_modulation = { ("{" ~ WHITESPACE* ~ number ~ WHITESPACE* ~ "}") }


number = @{ "-"? ~ unsigned_float }
unsigned_float = @{ unsigned_int
    ~ ("." ~ ASCII_DIGIT*)?
    ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}
unsigned_int = @{ "0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT* }
WHITESPACE = _{ " " | "\t" }
COMMENT = _{ "#" ~ (!"\n" ~ ANY)* }
